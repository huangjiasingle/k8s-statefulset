apiVersion: v1
kind: ServiceAccount
metadata:
  name: rabbitmq-operator
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rabbitmq-autocluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: rabbitmq-autocluster
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: rabbitmq-demo
    app.kubernetes.io/version: 1.1.1
  name: rabbitmq-demo
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: amqp
    port: 5672
    protocol: TCP
    targetPort: 5672
  selector:
    app.kubernetes.io/instance: rabbitmq-demo
    app.kubernetes.io/version: 1.1.1
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: rabbitmq-demo
    app.kubernetes.io/version: 1.1.1
  name: rabbitmq-config
  namespace: default
data:
  rabbitmqDefaultPass: base64 password
  rabbitmqDefaultUser: base64 user
  rabbitmqErlangCookie: base64 cookie
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: rabbitmq-demo
    app.kubernetes.io/version: 1.1.1
  name: rabbitmq-demo
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: rabbitmq-demo
      app.kubernetes.io/version: 3.6.9
  serviceName: rabbitmq-demo
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: rabbitmq-demo
        app.kubernetes.io/version: 1.1.1
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              key: rabbitmqDefaultUser
              name: rabbitmq-config
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              key: rabbitmqDefaultPass
              name: rabbitmq-config
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              key: rabbitmqErlangCookie
              name: rabbitmq-config
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: K8S_SERVICE_NAME
          value: rabbitmq-oam-mq-mq-1
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        - name: RABBITMQ_NODENAME
          value: rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME)
        - name: RABBITMQ_NODE_TYPE
          value: disc
        - name: AUTOCLUSTER_TYPE
          value: k8s
        - name: AUTOCLUSTER_DELAY
          value: "10"
        - name: AUTOCLUSTER_CLEANUP
          value: "true"
        - name: CLEANUP_WARN_ONLY
          value: "false"
        - name: K8S_ADDRESS_TYPE
          value: hostname
        - name: K8S_HOSTNAME_SUFFIX
          value: .$(K8S_SERVICE_NAME)
        image: huangjia/rabbitmq:3.6.9-management-alpine
        imagePullPolicy: IfNotPresent
        name: rabbitmq
        resources:
          limits:
            cpu: "2"
            memory: 5G
          requests:
            cpu: "2"
            memory: 5G
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: data
      serviceAccount: rabbitmq-autocluster
      volumes:
      - emptyDir: {}
        name: data  
  # volumeClaimTemplates:
  # - metadata:
  #     labels:
  #       app.kubernetes.io/name: rabbitmq
  #       app.kubernetes.io/instance: rabbitmq-demo
  #       app.kubernetes.io/version: 3.6.9
  #     name: rabbitmq-oam-mq-mq-1
  #   spec:
  #     accessModes:
  #     - ReadWriteOnce
  #     resources:
  #       requests:
  #         storage: 10G
  #     storageClassName: ceph